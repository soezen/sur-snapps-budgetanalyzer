<?xml version="1.0" encoding="UTF-8"?>
<!-- // NAME: db-config.xml // // MODULE: rewardsdb // // PURPOSE:
	Database and transaction configuration for testing the rewards // application. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
	    http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
	    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:annotation-config />

	<!-- Translates ORM exceptions to Spring Data Access Exceptions -->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

    <!-- A transaction manager for working with JPA Entity Managers -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <!-- FactoryBean that creates the EntityManagerFactory -->
    <bean id="entityManagerFactory"
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </property>
        <property name="packagesToScan" value="sur.snapps.budgetanalyzer.domain" />
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
            </props>
        </property>
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- TODO selenium tests are being run twice within one jenkins build (other tests too i guess) -->

    <!-- Testing "dataSource" configuration using an in-memory database (for
        unit tests, ...) -->
    <!-- To enable, declare "-Dspring.profiles.active=dev-hsql" or @ActiveProfiles("dev-hsql") -->
    <beans profile="local">

        <!--<jdbc:embedded-database id="dataSource" type="HSQL">-->
            <!--<jdbc:script location="classpath:db/hsqldb/initDB.sql" />-->
            <!--<jdbc:script location="classpath:db/hsqldb/populateDB.sql" />-->
        <!--</jdbc:embedded-database>-->
        <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
            <property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
            <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
            <property name="username" value="budgetanalyzer"/>
            <property name="password" value="rezylanategdub"/>
        </bean>
    </beans>

    <!-- JNDI DataSource for JEE environments -->
    <!-- use relative jndi-name + resource-ref=true for https://jira.springsource.org/browse/SPR-4585 -->
    <beans profile="cloudbees">
        <jee:jndi-lookup id="dataSource" jndi-name="jdbc/mydb" resource-ref="true" />
    </beans>

</beans>
